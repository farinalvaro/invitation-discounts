{"version":3,"sources":["components/footer/footer.component.jsx","components/header/header.component.jsx","utilities/tracking.utils.js","pages/homepage/homepage.component.jsx","App.js","serviceWorker.js","index.js"],"names":["Footer","className","Header","id","Event","category","action","label","ReactGA","event","HomePage","useEffect","trackingID","initialize","pageview","window","location","pathname","search","role","href","target","rel","onClick","App","Boolean","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"6QAWeA,G,MATA,kBAEb,4BAAQC,UAAU,cAChB,yBAAKA,UAAU,aACb,2BAAG,uBAAGA,UAAU,gBAAb,yBAAH,kHCYSC,EAhBA,kBACb,gCACM,yBAAKD,UAAU,mBAAmBE,GAAG,gBACnC,yBAAKF,UAAU,eAGjB,yBAAKA,UAAU,wCACb,yBAAKA,UAAU,4CACb,0BAAMA,UAAU,0CACd,2E,OCKDG,EAAQ,SAACC,EAAUC,EAAQC,GACtCC,IAAQC,MAAM,CACZJ,SAAUA,EACVC,OAAQA,EACRC,MAAOA,KC2CIG,EA5DE,WAOf,OALAC,qBAAU,WDHU,IAAAC,ICIX,iBDHTJ,IAAQK,WAAWD,GAInBJ,IAAQM,SAASC,OAAOC,SAASC,SAAWF,OAAOC,SAASE,WCI1D,0BAAMC,KAAK,QACT,6BAASlB,UAAU,8BACjB,yBAAKA,UAAU,aACb,+DACA,uBAAGA,UAAU,mBAAb,8CAC0C,uBAAGA,UAAU,gBAAb,8CAE1C,2BACE,uBAAGmB,KAAK,mDACNnB,UAAU,uBACVoB,OAAO,SACPC,IAAI,sBACJC,QAAS,kBAAMnB,EAAM,WAAY,sBAAuB,iBAJ1D,sCAUN,yBAAKH,UAAU,uBACb,yBAAKA,UAAU,aACb,yBAAKA,UAAU,OACb,yBAAKA,UAAU,aACf,yBAAKA,UAAU,YACb,yBAAKA,UAAU,uBACb,yBAAKA,UAAU,yBACb,yBAAKA,UAAU,YACb,uBAAGA,UAAU,aAAY,kDAAzB,kEAEF,yBAAKA,UAAU,mCACb,uBACEA,UAAU,2BACVmB,KAAK,mDACLC,OAAO,SACPC,IAAI,sBACJC,QAAS,kBAAMnB,EAAM,WAAY,sBAAuB,iBAL1D,+BASF,yBAAKH,UAAU,8BACb,2BAAOA,UAAU,cAAjB,sDAKR,yBAAKA,UAAU,kB,MCrCZuB,MAVf,WACE,OACE,6BACE,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,QCDcC,QACW,cAA7BV,OAAOC,SAASU,UAEe,UAA7BX,OAAOC,SAASU,UAEhBX,OAAOC,SAASU,SAASC,MACvB,2D,MCXNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD4H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.90bd9cd6.chunk.js","sourcesContent":["import React from 'react';\n\nconst Footer = () => (\n\n  <footer className=\"text-muted\">\n    <div className=\"container\">\n      <p><b className='text-success'>Este sitio es seguro.</b> Sin publicidad y sin spam. Accedé al cupón de descuento de Airbnb a través de una invitación!</p>\n    </div>\n  </footer>\n);\n\nexport default Footer;","import React from 'react';\n\nconst Header = () => (\n  <header>\n        <div className=\"collapse bg-dark\" id=\"navbarHeader\">\n          <div className=\"container\">\n          </div>\n        </div>\n        <div className=\"navbar navbar-dark bg-dark shadow-sm\">\n          <div className=\"container d-flex justify-content-between\">\n            <span className=\"navbar-brand d-flex align-items-center\">\n              <strong>Cupón de descuento invitacional</strong>\n            </span>\n          </div>\n        </div>\n      </header>\n);\n\nexport default Header;","import ReactGA from 'react-ga';\n\nexport const initGA = trackingID => {\n  ReactGA.initialize(trackingID);\n}\n\nexport const PageView = () => {\n  ReactGA.pageview(window.location.pathname + window.location.search);\n}\n\n/**\n * Event - Add custom tracking event.\n * @param {string} category \n * @param {string} action \n * @param {string} label \n */\nexport const Event = (category, action, label) => {\n  ReactGA.event({\n    category: category,\n    action: action,\n    label: label\n  });\n};","import React, { useEffect } from 'react';\nimport { Event, initGA, PageView } from '../../utilities/tracking.utils.js';\n\nconst HomePage = () => {\n\n  useEffect(() => {\n    initGA('UA-156429141-1');\n    PageView();\n  });\n\n  return (\n    <main role=\"main\">\n      <section className=\"jumbotron text-center mb-0\">\n        <div className=\"container\">\n          <h1>Cupones de descuentos oficiales</h1>\n          <p className=\"lead text-muted\">\n            Sin publicidad, sin spam y sin engaños. <b className=\"text-success\">Los cupones redirigen a sitios oficiales.</b>\n          </p>\n          <p>\n            <a href=\"https://es.airbnb.com/c/alvarof2345?currency=USD\"\n              className=\"btn btn-primary my-2\"\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n              onClick={() => Event('HomePage', 'Clicked on discount', 'HEAD_BUTTON')}\n            >Cupón de descuento en Airbnb</a>\n          </p>\n        </div>\n      </section>\n\n      <div className=\"album py-5 bg-light\">\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-md-4\"></div>\n            <div className=\"col-md-4\">\n              <div className=\"card mb-4 shadow-sm\">\n                <div className=\"card-body text-center\">\n                  <div className=\"row mb-4\">\n                    <p className=\"card-text\"><b>Descontá 44 USD </b>en tu reserva de Airbnb usando una invitación para unirte!</p>\n                  </div>\n                  <div className=\"row justify-content-center mb-4\">\n                    <a\n                      className=\"App-link btn btn-primary\"\n                      href=\"https://es.airbnb.com/c/alvarof2345?currency=USD\"\n                      target=\"_blank\"\n                      rel=\"noopener noreferrer\"\n                      onClick={() => Event('HomePage', 'Clicked on discount', 'HEAD_BUTTON')}\n                    >\n                      Cupón oficial de Airbnb</a>\n                  </div>\n                  <div className=\"row justify-content-center\">\n                    <small className=\"text-muted\">Este cupón te llevará al sitio de Airbnb</small>\n                  </div>\n                </div>\n              </div>\n            </div>\n            <div className=\"col-md-4\"></div>\n          </div>\n        </div>\n      </div>\n    </main>\n  );\n};\n\nexport default HomePage;","import React from 'react';\n\nimport Footer from './components/footer/footer.component';\nimport Header from './components/header/header.component';\nimport HomePage from './pages/homepage/homepage.component';\n\nimport './App.css';\n\nfunction App() {\n  return (\n    <div>\n      <Header />\n      <HomePage />\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport './custom.scss';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}